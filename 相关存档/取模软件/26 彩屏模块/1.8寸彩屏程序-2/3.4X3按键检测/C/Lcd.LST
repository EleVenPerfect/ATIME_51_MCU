C51 COMPILER V7.10   LCD                                                                   05/04/2011 17:35:55 PAGE 1   


C51 COMPILER V7.10, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN Lcd.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Lcd.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************************************************
   2          *                                                                                         *
   3          *                                  彩屏驱动程序                                                   *
   4          *                                                                                                                 *
   5          **********************************************************/
   6          
   7          #include <reg52.h>
   8          #include "Lcd.h"
   9          #include "char.h"
  10          #include "chinese.h"
  11          
  12          uint colors[]=
  13          {
  14            0xf800,0x07e0,0x001f,0xffe0,0x0000,0x07ff,0xf81f,0xffff
  15          };
  16          
  17          /**********************************************************
  18          
  19           延时子函数
  20          
  21          **********************************************************/
  22          void delay_ms(uint ms)
  23          {
  24   1        unsigned char k;
  25   1      
  26   1        while (ms--)
  27   1        {
  28   2          for (k = 0; k < 228; k++)
  29   2            ;
  30   2        }
  31   1      }
  32          
  33          /**********************************************************
  34          
  35           写8位数据子函数
  36          
  37          **********************************************************/
  38          void WriteDAT(uchar value)    // color data
  39          {
  40   1              LCD_CS =  0;
  41   1              LCD_RS  = 1;
  42   1      //      LCD_WR  = 0;
  43   1              DATA    = value;
  44   1          LCD_WR  = 0;
  45   1              LCD_WR  = 1;
  46   1              LCD_CS =  1;
  47   1      }
  48          
  49          
  50          /**********************************************************
  51          
  52           写8位命令子函数
  53          
  54          **********************************************************/
  55          void WriteCOM(uchar value)    // color data
C51 COMPILER V7.10   LCD                                                                   05/04/2011 17:35:55 PAGE 2   

  56          {
  57   1              LCD_CS  =  0;
  58   1              LCD_RS  =  0;
  59   1      //      LCD_WR  =  0;
  60   1              DATA    =  value;
  61   1              LCD_WR  =  0;
  62   1              LCD_WR  =  1;
  63   1              LCD_CS  =  1;
  64   1      }
  65          
  66          
  67          /**********************************************************
  68          
  69          设置显示窗口子函数
  70          
  71          **********************************************************/
  72          void LCD_SetRamAddr(uint xStart, uint xEnd, uint yStart, uint yEnd) 
  73          {
  74   1              WriteCOM(0x2a);            //行
  75   1              WriteDAT(xStart>>8);   //XS15-XS8
  76   1              WriteDAT(xStart);          //XS7-XS0    (X start address)
  77   1              WriteDAT(xEnd>>8);         //XE15-XE8
  78   1              WriteDAT(xEnd);            //XE7-XE0    (X end address)
  79   1      
  80   1              WriteCOM(0x2b);            //列 row address set (RASET)
  81   1              WriteDAT(yStart>>8);   //YS15-YS8
  82   1              WriteDAT(yStart);          //YS7-YS0    (Y start address)
  83   1              WriteDAT(yEnd>>8);         //YE15-YE8
  84   1              WriteDAT(yEnd);            //YE7-YE0    (Y end address)
  85   1      
  86   1          WriteCOM(0x2c);                //display on 显示打开命令
  87   1         
  88   1      }
  89          
  90          
  91          /**********************************************************/
  92          void LCD_init(void)
  93          {        //请看数据手册的命令部分 了解其个命令的功能
  94   1              LCD_RST=1;
  95   1              delay_ms(100);
  96   1              LCD_RST=0;
  97   1              delay_ms(100);
  98   1              LCD_RST=1;
  99   1              delay_ms(100);
 100   1              
 101   1              WriteCOM(0x01);     //software reset软件复位
 102   1              delay_ms(100);
 103   1              WriteCOM(0x11);     //sleep out/power on(SLPOUT) 退出睡眠
 104   1              delay_ms(50);
 105   1              WriteCOM(0x20);         //display inversion off 关闭取反
 106   1              delay_ms(50);
 107   1              WriteCOM(0x38);     //ID mode off (IDMOFF)
 108   1              delay_ms(50);
 109   1              WriteCOM(0x13);     //Normal display mode on (Partial mode off)
 110   1              
 111   1              WriteCOM(0x3a);     //color mode Interface pixel format  (COLMOD)
 112   1              WriteDAT(0x05);         //16-bit/pixel , 1-times data transfer
 113   1              
 114   1              WriteCOM(0xc0);         //power control 1      (PWCTR1)
 115   1              WriteDAT(0x03);         //default value  LCM=0 set the GVDD voltage=4.65
 116   1              
 117   1              WriteCOM(0xc5);    
C51 COMPILER V7.10   LCD                                                                   05/04/2011 17:35:55 PAGE 3   

 118   1              WriteDAT(0xc8);    //VCOMH voltage set 4.300V
 119   1              
 120   1              WriteCOM(0xc6);
 121   1              WriteDAT(0x1f);    //VCOMAC voltage set 5.550V ;
 122   1              delay_ms(10);
 123   1              
 124   1              WriteCOM(0xfe);
 125   1              WriteDAT(0x00);
 126   1              WriteDAT(0x04);
 127   1              
 128   1              WriteCOM(0x26);    //gamma sel
 129   1              WriteDAT(0x04);
 130   1              
 131   1              
 132   1              WriteCOM(0x2a);    //column address set (CASET)
 133   1              WriteDAT(0x00);    //XS15-XS8
 134   1              WriteDAT(0x00);    //XS7-XS0    (X start address)
 135   1              WriteDAT(0x00);    //XE15-XE8
 136   1              WriteDAT(0x7f);    //XE7-XE0    (X end address)
 137   1              
 138   1              WriteCOM(0x2b);    //row address set (RASET)
 139   1              WriteDAT(0x00);    //YS15-YS8
 140   1              WriteDAT(0x00);    //YS7-YS0    (Y start address)
 141   1              WriteDAT(0x00);    //YE15-YE8
 142   1              WriteDAT(0x9f);    //YE7-YE0    (Y end address)
 143   1              
 144   1              WriteCOM(0x36);    //memory data access control  (MADCTR)
 145   1              WriteDAT(0xc0);
 146   1              
 147   1              WriteCOM(0x29);   // display on
 148   1      
 149   1       
 150   1      }
 151          /**********************************************************
 152          
 153           清屏子函数
 154          
 155          **********************************************************/
 156          void  LCD_clear(uchar n)
 157          {
 158   1         uint num;
 159   1         
 160   1         LCD_SetRamAddr(0,127, 0,159);  //设置显示的坐标
 161   1      
 162   1         for(num=20480;num>0;num--)          //160*128=20480
 163   1         {
 164   2               WriteDAT(colors[n]>>8);   //高8位
 165   2               WriteDAT(colors[n]);      //低8位
 166   2         }
 167   1      }
 168          
 169          
 170          /**********************************************************
 171          
 172            字符显示子函数
 173          
 174          **********************************************************/
 175          void LCD_ShowChar(uchar x,uchar y,uint For_color,uint Bk_color, char ch)
 176          {       
 177   1         uchar temp;
 178   1         uchar pos,t;
 179   1         uchar  CHAR_W,CHAR_H;
C51 COMPILER V7.10   LCD                                                                   05/04/2011 17:35:55 PAGE 4   

 180   1         
 181   1         CHAR_W = 8;         //8*16
 182   1         CHAR_H = 16;
 183   1      
 184   1         if(x>(LCD_SIZE_X-CHAR_W)||y>(LCD_SIZE_Y-CHAR_H))
 185   1         return;
 186   1         
 187   1         LCD_SetRamAddr(x, x+CHAR_W-1, y,y+CHAR_H-1);   //设置显示的坐标
 188   1         ch = ch-32;                       //按照ASCII编码顺序的到相应字母的编码
 189   1      
 190   1         for(pos=0;pos<CHAR_H;pos++)  
 191   1         {
 192   2            temp= Font8x16[ch][pos];
 193   2            
 194   2            for(t=0;t<CHAR_W;t++)
 195   2            {                 
 196   3                  if(temp&0x80)
 197   3                   {WriteDAT(For_color>>8); WriteDAT(For_color); } //textcolor  //字体颜色
 198   3          
 199   3               else 
 200   3                      {WriteDAT(Bk_color>>8);  WriteDAT(Bk_color) ;   }
 201   3              
 202   3                      
 203   3              temp<<=1; 
 204   3              
 205   3            }
 206   2                
 207   2         }
 208   1      }  
 209          
 210          /**********************************************************
 211           显示字符串子函数
 212          
 213           x,y:起点坐标  
 214           *p:字符串起始地址
 215          
 216          **********************************************************/
 217          void LCD_ShowString(uchar x,uchar y,uint For_color,uint Bk_color,char *p)
 218          {         
 219   1         while(*p!='\0')
 220   1         {       
 221   2           LCD_ShowChar(x,y,For_color,Bk_color,*p);
 222   2           x+=8;        //字体的宽度
 223   2           p++;
 224   2         }
 225   1      }
 226          
 227          
 228          /**********************************************************
 229          
 230            写汉字子函数
 231          
 232          **********************************************************/
 233          void ChineseChar(uint x,uint y,int size,uint For_color,uint Bk_color ,char c)
 234          {
 235   1         int e=0,i,j;
 236   1         int  ed;
 237   1         
 238   1         uint  ncols;
 239   1         uint  nrows;
 240   1         uint  nbytes;
 241   1      
C51 COMPILER V7.10   LCD                                                                   05/04/2011 17:35:55 PAGE 5   

 242   1         uchar *pfont;
 243   1         uchar *pchar;
 244   1         uchar *fonttable[]={(uchar *)hz12,(uchar *)hz16,(uchar *)hz24};              //将字体的首地址放在fortable数组中
 245   1         
 246   1         pfont=(uchar *)fonttable[size];
 247   1      
 248   1         if(size==0)
 249   1         {
 250   2           ncols =12-1;
 251   2           nrows =12-1;
 252   2           nbytes =24;         //(12*12)/8
 253   2         }
 254   1         else
 255   1         if(size==1)
 256   1         {
 257   2           ncols =16-1;
 258   2           nrows =16-1;
 259   2           nbytes =32;  //(16*16)/8
 260   2         }
 261   1         else
 262   1         if(size==2)
 263   1         {
 264   2           ncols =24-1;
 265   2           nrows =24-1;
 266   2           nbytes =72;   //(24*24)/8
 267   2         }
 268   1         
 269   1         pchar=pfont + (nbytes*(c-1));
 270   1      
 271   1         LCD_SetRamAddr(x, x+nrows, y,y+ncols);  //设置显示的坐标
 272   1         
 273   1         for(i=0;i<nbytes;i++)
 274   1         {
 275   2           ed=*pchar++;
 276   2               if(size==0)
 277   2               {
 278   3             if(i%2==0)
 279   3             e=8;
 280   3             else
 281   3             e=4;
 282   3               }
 283   2               else
 284   2               e=8;
 285   2           
 286   2           for(j=0;j<e;j++)
 287   2           if((ed>>j)&0x01)
 288   2           {
 289   3             WriteDAT(For_color>>8);  //textcolor     文字颜色
 290   3                 WriteDAT(For_color);
 291   3               }
 292   2           else
 293   2           {
 294   3             WriteDAT(Bk_color>>8);  //backcolor 背景颜色
 295   3                 WriteDAT(Bk_color);
 296   3               }
 297   2        }
 298   1      }
 299          
 300          /*********************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V7.10   LCD                                                                   05/04/2011 17:35:55 PAGE 6   

   CODE SIZE        =    941    ----
   CONSTANT SIZE    =   2337    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      59
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
